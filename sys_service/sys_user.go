// ================================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// You can delete these comments if you wish manually maintain this interface file.
// ================================================================================

package sys_service

import (
	"context"

	"github.com/SupenBysz/gf-admin-community/sys_model"
	"github.com/SupenBysz/gf-admin-community/sys_model/sys_entity"
	"github.com/SupenBysz/gf-admin-community/sys_model/sys_enum"
)

type (
	ISysUser interface {
		InstallHook(event sys_enum.UserEvent, hookFunc sys_model.UserHookFunc) int64
		UnInstallHook(savedHookId int64)
		CleanAllHook()
		QueryUserList(ctx context.Context, info *sys_model.SearchParams, unionMainId int64, isExport bool) (response *sys_model.SysUserListRes, err error)
		SetUserRoleIds(ctx context.Context, roleIds []int64, userId int64) (bool, error)
		CreateUser(ctx context.Context, info sys_model.UserInnerRegister, userState sys_enum.UserState, userType sys_enum.UserType, customId ...int64) (*sys_model.SysUserRegisterRes, error)
		GetSysUserByUsername(ctx context.Context, username string) (*sys_entity.SysUser, error)
		HasSysUserByUsername(ctx context.Context, username string) bool
		GetSysUserById(ctx context.Context, userId int64) (*sys_entity.SysUser, error)
		SetUserPermissionIds(ctx context.Context, userId int64, permissionIds []int64) (bool, error)
		GetUserPermissionIds(ctx context.Context, userId int64) ([]int64, error)
		SetUsername(ctx context.Context, newUsername string, userId int64) (bool, error)
		UpdateUserPassword(ctx context.Context, info sys_model.UpdateUserPassword, userId int64) (bool, error)
		ResetUserPassword(ctx context.Context, userId int64, password string, confirmPassword string, userInfo sys_entity.SysUser) (bool, error)
	}
)

var (
	localSysUser ISysUser
)

func SysUser() ISysUser {
	if localSysUser == nil {
		panic("implement not found for interface ISysUser, forgot register?")
	}
	return localSysUser
}

func RegisterSysUser(i ISysUser) {
	localSysUser = i
}
