// ================================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// You can delete these comments if you wish manually maintain this interface file.
// ================================================================================

package service

import (
	"context"

	"github.com/SupenBysz/gf-admin-community/model"
	"github.com/SupenBysz/gf-admin-community/model/entity"
	kyAuth "github.com/SupenBysz/gf-admin-community/model/enum/auth"
	userType "github.com/SupenBysz/gf-admin-community/model/enum/user_type"
)

type (
	ISysAuth interface {
		InstallHook(state kyAuth.ActionType, userType userType.Code, hookFunc model.AuthHookFunc) int64
		UnInstallHook(savedHookId int64)
		CleanAllHook()
		Login(ctx context.Context, req model.LoginInfo, needCaptcha ...bool) (*model.TokenInfo, error)
		InnerLogin(ctx context.Context, sysUserInfo *entity.SysUser) (*model.TokenInfo, error)
		LoginByMobile(ctx context.Context, req model.LoginByMobileInfo) (*model.TokenInfo, error)
		Register(ctx context.Context, info model.SysUserRegister) (*entity.SysUser, error)
		ForgotPassword(ctx context.Context, info model.ForgotPassword) (int64, error)
		ResetPassword(ctx context.Context, password string, confirmPassword string, idKey string) (bool, error)
	}
)

var (
	localSysAuth ISysAuth
)

func SysAuth() ISysAuth {
	if localSysAuth == nil {
		panic("implement not found for interface ISysAuth, forgot register?")
	}
	return localSysAuth
}

func RegisterSysAuth(i ISysAuth) {
	localSysAuth = i
}
