// ================================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// You can delete these comments if you wish manually maintain this interface file.
// ================================================================================

package service

import (
	"context"

	"github.com/SupenBysz/gf-admin-community/model"
	"github.com/SupenBysz/gf-admin-community/model/entity"
	kyAudit "github.com/SupenBysz/gf-admin-community/model/enum/audit"
)

type (
	ISysAudit interface {
		InstallHook(state kyAudit.EventState, category int, hookFunc model.AuditHookFunc) int64
		UnInstallHook(savedHookId int64)
		CleanAllHook()
		GetAuditList(ctx context.Context, category int, state int, pagination *model.Pagination) (*model.SysAuditListRes, error)
		GetAuditById(ctx context.Context, id int64) *entity.SysAudit
		GetAuditByLatestUnionId(ctx context.Context, unionId int64) *entity.SysAudit
		CreateAudit(ctx context.Context, info model.CreateSysAudit) (*entity.SysAudit, error)
		UpdateAudit(ctx context.Context, id int64, state int, replay string) (bool, error)
	}
)

var (
	localSysAudit ISysAudit
)

func SysAudit() ISysAudit {
	if localSysAudit == nil {
		panic("implement not found for interface ISysAudit, forgot register?")
	}
	return localSysAudit
}

func RegisterSysAudit(i ISysAudit) {
	localSysAudit = i
}
